---
layout: post
title:  "Herons metode!"
mathjax: true
---

Her kan du se kode som lager løsningsforslag til tilnærmingen av kvadratrøtter av heltall etter et valgfritt antall iterasjoner ved bruk av Herons metode.

<details>
<summary>Vis kode</summary>

<p>
{% highlight python linenos %}

    import numpy as np

    def forkort(a,b) :   
        p = int(a/np.gcd(a,b))
        q = int(b/np.gcd(a,b))
        return [p, q]

    def herons(p, X,Y):                      
        Xtemp = [X[-1][0]*Y[-1][1]+X[-1][1]*Y[-1][0], 2*X[-1][1]*Y[-1][1]]  # regner ut neste x-verdi
        X.append(forkort(Xtemp[0], Xtemp[1]))                               # forkorter teller og nevner i Xtemp og lagrer i X
        Ytemp = [p*X[-1][1],X[-1][0]]                                       # regner ut neste y-verdi
        Y.append(forkort(Ytemp[0],Ytemp[1]))                                # forkorter teller og nevner i Ytemp og lagrer i Y
        
    def heronstext(p,n):
        X = [[p,1]] # samler x_i verdiene som [teller,nevner]
        Y = [[1,1]] # samler y_i verdiene som [teller,nevner]
        i=1
        print(f"Approksimasjonene til kvadratroten av {p} etter {n} iterasjoner er:")
        while i<=n:
            herons(p,X,Y)
            print(f"x_{i} = {X[-2][0]}/{X[-2][1]} + {Y[-2][0]}/{Y[-2][1]}/2 = {X[-1][0]}/{X[-1][1]}")
            # print(f"y_{i} = {p} * {X[-1][1]}/{X[-1][0]} = {Y[-1][0]}/{Y[-1][1]}") # Denne linja kan av-kommenteres hvis man ønsker både x-approksimasjonene og y-approksimasjonene.
            i += 1

{% endhighlight %}
</p>

</details>



<details >
<summary>Prøv koden</summary>


<div background='black'>
<input type='number' id='tall1' placeholder='Hvilket tall vil du approksimere kvadratroten til?' value='1027'  /> <br>
<input type='number' id='tall2' placeholder='Hvor mange iterasjoner vil du kjøre'  value='729' /> 
</div>

<button  class='button button5' style="vertical-align:middle" onclick='heronstekst()'> <span> Kjør </span></button>
<div    >
<p id='svar'> </p>
</div>

</details>



<script>

function forkort(a,b) {
    var p = int(a/np.gcd(a,b));
    var q = int(b/np.gcd(a,b));
    return [p,q];
}
</script>
<script>

function herons(p, X,Y) {                      
    var Xtemp = [X[X.length-1][0]*Y[Y.length-1][1]+X[X.length-1][1]*Y[Y.length-1][0], 2*X[X.length-1][1]*Y[Y.length-1][1]];
    X.push(forkort(Xtemp[0], Xtemp[1]));
    var Ytemp = [p*X[X.length-1][1],X[X.length-1][0];        
    Y.push(forkort(Ytemp[0],Ytemp[1]));
}

function heronstext(p,n){
    var X = [[p,1]];
    var Y = [[1,1]];
    var i = 1;
    var losntxt = "Approksimasjonene til kvadratroten av " + String(p) + " etter " + String(n) + " iterasjoner er: \n \n \\begin{multline*} \n";
    while i<=n:
        herons(p,X,Y)
        losntxt += "x_" + String(i) 
                + " = \\frac{ \\frac{" + String(X[X.length-2][0]) 
                + "}{" + String(X[X.length-2][1]) 
                + "} + \\frac{" + String(Y[Y.length-2][0]) 
                + "}{" 
                + String(Y[Y.length-2][1]) 
                + "}}{2} = " + "\\frac{"
                + String(X[X.length-1][0]) + "}{"
                + String(X[X.length-1][1]) + "} \n";
                i += 1;
    losntxt += "\\end{multline*}    

        //]: <>print(f"y_{i} = {p} * {X[-1][1]}/{X[-1][0]} = {Y[-1][0]}/{Y[-1][1]}") # Denne linja kan av-kommenteres hvis man ønsker både x-approksimasjonene og y-approksimasjonene.
                

}
  document.getElementById('svar').innerHTML = losntxt;
  MathJax.typeset();
}
</script>